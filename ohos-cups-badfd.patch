diff --git a/scheduler/job.c b/scheduler/job.c
index 11579875..c4e058e6 100644
--- a/scheduler/job.c
+++ b/scheduler/job.c
@@ -1359,7 +1359,7 @@ cupsdContinueJob(cupsd_job_t *job)	/* I - Job */
 
   cupsdRemoveSelect(job->status_pipes[0]);
   cupsdClosePipe(job->status_pipes);
-  cupsdStatBufDelete(job->status_buffer);
+  cupsdStatBufDeleteForJob(job->status_buffer);
   job->status_buffer = NULL;
 
  /*
@@ -3170,7 +3170,7 @@ finalize_job(cupsd_job_t *job,		/* I - Job */
 
   cupsdRemoveSelect(job->status_pipes[0]);
   cupsdClosePipe(job->status_pipes);
-  cupsdStatBufDelete(job->status_buffer);
+  cupsdStatBufDeleteForJob(job->status_buffer);
   job->status_buffer = NULL;
 
  /*
@@ -4968,7 +4968,7 @@ start_job(cupsd_job_t     *job,		/* I - Job ID */
 		     "back-channel pipes.");
 
     cupsdClosePipe(job->status_pipes);
-    cupsdStatBufDelete(job->status_buffer);
+    cupsdStatBufDeleteForJob(job->status_buffer);
     job->status_buffer = NULL;
 
     cupsdDestroyProfile(job->profile);
@@ -4999,7 +4999,7 @@ start_job(cupsd_job_t     *job,		/* I - Job ID */
     cupsdClosePipe(job->back_pipes);
 
     cupsdClosePipe(job->status_pipes);
-    cupsdStatBufDelete(job->status_buffer);
+    cupsdStatBufDeleteForJob(job->status_buffer);
     job->status_buffer = NULL;
 
     cupsdDestroyProfile(job->profile);
diff --git a/scheduler/process.c b/scheduler/process.c
index 7f05a90a..ff45d831 100644
--- a/scheduler/process.c
+++ b/scheduler/process.c
@@ -639,6 +639,14 @@ cupsdStartProcess(
 
   cupsdLogMessage(CUPSD_LOG_DEBUG2, "cupsdStartProcess: Calling posix_spawn.");
 
+  int flag = fcntl(4, F_GETFD);
+  cupsdLogMessage(CUPSD_LOG_DEBUG2, "cupsdStartProcess: sidefd flag=%d.", flag);
+
+  if (flag == 1)
+  {
+    fcntl(4, F_SETFD, 0);
+  }
+
   if (posix_spawn(pid, exec_path, &actions, &attrs, argv, envp ? envp : environ))
   {
     cupsdLogMessage(CUPSD_LOG_ERROR, "Unable to fork %s - %s.", command, strerror(errno));
diff --git a/scheduler/statbuf.c b/scheduler/statbuf.c
index 5a2530e4..9b71037e 100644
--- a/scheduler/statbuf.c
+++ b/scheduler/statbuf.c
@@ -40,6 +40,28 @@ cupsdStatBufDelete(cupsd_statbuf_t *sb)	/* I - Status buffer */
 }
 
 
+/*
+ * 'cupsdStatBufDeleteForJob()' - Destroy a status buffer.
+ */
+
+void
+cupsdStatBufDeleteForJob(cupsd_statbuf_t *sb)	/* I - Status buffer */
+{
+ /*
+  * Range check input...
+  */
+
+  if (!sb)
+    return;
+
+ /*
+  * Free memory used...
+  */
+
+  free(sb);
+}
+
+
 /*
  * 'cupsdStatBufNew()' - Create a new status buffer.
  */
diff --git a/scheduler/statbuf.h b/scheduler/statbuf.h
index 45fa904b..e78d2ed5 100644
--- a/scheduler/statbuf.h
+++ b/scheduler/statbuf.h
@@ -34,6 +34,7 @@ typedef struct				/**** Status buffer */
  */
 
 extern void		cupsdStatBufDelete(cupsd_statbuf_t *sb);
+extern void		cupsdStatBufDeleteForJob(cupsd_statbuf_t *sb);
 extern cupsd_statbuf_t	*cupsdStatBufNew(int fd, const char *prefix, ...);
 extern char		*cupsdStatBufUpdate(cupsd_statbuf_t *sb, int *loglevel,
 			                    char *line, int linelen);
